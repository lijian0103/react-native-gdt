def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

buildscript {
    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 28)
    buildToolsVersion safeExtGet('buildToolsVersion', '28.0.2')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)
        targetSdkVersion safeExtGet('targetSdkVersion', 28)
        versionCode 1
        versionName "1.0.0"
    }
    lintOptions {
        abortOnError false
        warning 'InvalidPackage'
    }
}

repositories {
    mavenLocal()
    google()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$rootDir/../node_modules/react-native/android"
    }
    jcenter()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:support-v4:${safeExtGet('supportLibVersion', '28.0.0')}"
    implementation "com.android.support:recyclerview-v7:${safeExtGet('supportLibVersion', '28.0.0')}"
    implementation "com.android.support:appcompat-v7:${safeExtGet('supportLibVersion', '28.0.0')}"
    implementation "com.android.support:design:${safeExtGet('supportLibVersion', '28.0.0')}"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    implementation "com.facebook.react:react-native:+"
    implementation "com.google.code.gson:gson:2.8.5"
}
  